:doc:`ObjectVersion <index>` / Action / get

***
get
***



.. py:method:: S3.ObjectVersion.get(**kwargs)

  

  Retrieves objects from Amazon S3. To use ``GET``, you must have ``READ`` access to the object. If you grant ``READ`` access to the anonymous user, you can return the object without using an authorization header.

   

  An Amazon S3 bucket has no directory hierarchy such as you would find in a typical computer file system. You can, however, create a logical hierarchy by using object key names that imply a folder structure. For example, instead of naming an object ``sample.jpg``, you can name it ``photos/2006/February/sample.jpg``.

   

  To get an object from such a logical hierarchy, specify the full key name for the object in the ``GET`` operation. For a virtual hosted-style request example, if you have the object ``photos/2006/February/sample.jpg``, specify the resource as ``/photos/2006/February/sample.jpg``. For a path-style request example, if you have the object ``photos/2006/February/sample.jpg`` in the bucket named ``examplebucket``, specify the resource as ``/examplebucket/photos/2006/February/sample.jpg``. For more information about request types, see `HTTP Host Header Bucket Specification <https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingSpecifyBucket>`__.

   

  For more information about returning the ACL of an object, see `GetObjectAcl <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html>`__.

   

  If the object you are retrieving is stored in the S3 Glacier or S3 Glacier Deep Archive storage class, or S3 Intelligent-Tiering Archive or S3 Intelligent-Tiering Deep Archive tiers, before you can retrieve the object you must first restore a copy using `RestoreObject <https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html>`__. Otherwise, this action returns an ``InvalidObjectStateError`` error. For information about restoring archived objects, see `Restoring Archived Objects <https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html>`__.

   

  Encryption request headers, like ``x-amz-server-side-encryption``, should not be sent for GET requests if your object uses server-side encryption with KMS keys (SSE-KMS) or server-side encryption with Amazon S3–managed encryption keys (SSE-S3). If your object does use these types of keys, you’ll get an HTTP 400 BadRequest error.

   

  If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object, you must use the following headers:

   

  
  * x-amz-server-side-encryption-customer-algorithm
   
  * x-amz-server-side-encryption-customer-key
   
  * x-amz-server-side-encryption-customer-key-MD5
  

   

  For more information about SSE-C, see `Server-Side Encryption (Using Customer-Provided Encryption Keys) <https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html>`__.

   

  Assuming you have the relevant permission to read object tags, the response also returns the ``x-amz-tagging-count`` header that provides the count of number of tags associated with the object. You can use `GetObjectTagging <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html>`__ to retrieve the tag set associated with an object.

   

  **Permissions**

   

  You need the relevant read object (or version) permission for this operation. For more information, see `Specifying Permissions in a Policy <https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html>`__. If the object you request does not exist, the error Amazon S3 returns depends on whether you also have the ``s3:ListBucket`` permission.

   

  
  * If you have the ``s3:ListBucket`` permission on the bucket, Amazon S3 will return an HTTP status code 404 ("no such key") error.
   
  * If you don’t have the ``s3:ListBucket`` permission, Amazon S3 will return an HTTP status code 403 ("access denied") error.
  

   

  **Versioning**

   

  By default, the GET action returns the current version of an object. To return a different version, use the ``versionId`` subresource.

   

  .. note::

    

    
    * If you supply a ``versionId``, you need the ``s3:GetObjectVersion`` permission to access a specific version of an object. If you request a specific version, you do not need to have the ``s3:GetObject`` permission.
     
    * If the current version of the object is a delete marker, Amazon S3 behaves as if the object was deleted and includes ``x-amz-delete-marker: true`` in the response.
    

    

   

  For more information about versioning, see `PutBucketVersioning <https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html>`__.

   

  **Overriding Response Header Values**

   

  There are times when you want to override certain response header values in a GET response. For example, you might override the ``Content-Disposition`` response header value in your GET request.

   

  You can override values for a set of response headers using the following query parameters. These response header values are sent only on a successful request, that is, when status code 200 OK is returned. The set of headers you can override using these parameters is a subset of the headers that Amazon S3 accepts when you create an object. The response headers that you can override for the GET response are ``Content-Type``, ``Content-Language``, ``Expires``, ``Cache-Control``, ``Content-Disposition``, and ``Content-Encoding``. To override these header values in the GET response, you use the following request parameters.

   

  .. note::

    

    You must sign the request, either using an Authorization header or a presigned URL, when using these parameters. They cannot be used with an unsigned (anonymous) request.

    

   

  
  * ``response-content-type``
   
  * ``response-content-language``
   
  * ``response-expires``
   
  * ``response-cache-control``
   
  * ``response-content-disposition``
   
  * ``response-content-encoding``
  

   

  **Additional Considerations about Request Headers**

   

  If both of the ``If-Match`` and ``If-Unmodified-Since`` headers are present in the request as follows: ``If-Match`` condition evaluates to ``true``, and; ``If-Unmodified-Since`` condition evaluates to ``false``; then, S3 returns 200 OK and the data requested.

   

  If both of the ``If-None-Match`` and ``If-Modified-Since`` headers are present in the request as follows: `` If-None-Match`` condition evaluates to ``false``, and; ``If-Modified-Since`` condition evaluates to ``true``; then, S3 returns 304 Not Modified response code.

   

  For more information about conditional requests, see `RFC 7232 <https://tools.ietf.org/html/rfc7232>`__.

   

  The following operations are related to ``GetObject``:

   

  
  * `ListBuckets <https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html>`__
   
  * `GetObjectAcl <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html>`__
  

  

  See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetObject>`_  


  **Request Syntax**
  ::

    response = object_version.get(
        IfMatch='string',
        IfModifiedSince=datetime(2015, 1, 1),
        IfNoneMatch='string',
        IfUnmodifiedSince=datetime(2015, 1, 1),
        MirrorDestination='string',
        Range='string',
        ResponseCacheControl='string',
        ResponseContentDisposition='string',
        ResponseContentEncoding='string',
        ResponseContentLanguage='string',
        ResponseContentType='string',
        ResponseExpires=datetime(2015, 1, 1),
        SSECustomerAlgorithm='string',
        SSECustomerKey='string',
        RequestPayer='requester',
        PartNumber=123,
        ExpectedBucketOwner='string'
    )
    
  :type IfMatch: string
  :param IfMatch: 

    Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.

    

  
  :type IfModifiedSince: datetime
  :param IfModifiedSince: 

    Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.

    

  
  :type IfNoneMatch: string
  :param IfNoneMatch: 

    Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.

    

  
  :type IfUnmodifiedSince: datetime
  :param IfUnmodifiedSince: 

    Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.

    

  
  :type MirrorDestination: string
  :param MirrorDestination: Mirror source for object reads.

  
  :type Range: string
  :param Range: 

    Downloads the specified byte range of an object. For more information about the HTTP Range header, see `https\://www.rfc-editor.org/rfc/rfc9110.html#name-range <https://www.rfc-editor.org/rfc/rfc9110.html#name-range>`__.

     

    .. note::

      

      Amazon S3 doesn't support retrieving multiple ranges of data per ``GET`` request.

      

    

  
  :type ResponseCacheControl: string
  :param ResponseCacheControl: 

    Sets the ``Cache-Control`` header of the response.

    

  
  :type ResponseContentDisposition: string
  :param ResponseContentDisposition: 

    Sets the ``Content-Disposition`` header of the response.

    

  
  :type ResponseContentEncoding: string
  :param ResponseContentEncoding: 

    Sets the ``Content-Encoding`` header of the response.

    

  
  :type ResponseContentLanguage: string
  :param ResponseContentLanguage: 

    Sets the ``Content-Language`` header of the response.

    

  
  :type ResponseContentType: string
  :param ResponseContentType: 

    Sets the ``Content-Type`` header of the response.

    

  
  :type ResponseExpires: datetime
  :param ResponseExpires: 

    Sets the ``Expires`` header of the response.

    

  
  :type SSECustomerAlgorithm: string
  :param SSECustomerAlgorithm: 

    Specifies the algorithm to use when decrypting the object (for example, ``AES256``).

     

    If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object, you must use the following headers:

     

    
    * ``x-amz-server-side-encryption-customer-algorithm``
     
    * ``x-amz-server-side-encryption-customer-key``
     
    * ``x-amz-server-side-encryption-customer-key-MD5``
    

     

    For more information about SSE-C, see `Server-Side Encryption (Using Customer-Provided Encryption Keys) <https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html>`__ in the *Amazon S3 User Guide*.

     

    .. note::

      

      This functionality is not supported for directory buckets.

      

    

  
  :type SSECustomerKey: string
  :param SSECustomerKey: 

    Specifies the customer-provided encryption key that you originally provided for Amazon S3 to encrypt the data before storing it. This value is used to decrypt the object when recovering it and must match the one used when storing the data. The key must be appropriate for use with the algorithm specified in the ``x-amz-server-side-encryption-customer-algorithm`` header.

     

    If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object, you must use the following headers:

     

    
    * ``x-amz-server-side-encryption-customer-algorithm``
     
    * ``x-amz-server-side-encryption-customer-key``
     
    * ``x-amz-server-side-encryption-customer-key-MD5``
    

     

    For more information about SSE-C, see `Server-Side Encryption (Using Customer-Provided Encryption Keys) <https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html>`__ in the *Amazon S3 User Guide*.

     

    .. note::

      

      This functionality is not supported for directory buckets.

      

    

  
  :type SSECustomerKeyMD5: string
  :param SSECustomerKeyMD5: 

    Specifies the 128-bit MD5 digest of the customer-provided encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.

     

    If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object, you must use the following headers:

     

    
    * ``x-amz-server-side-encryption-customer-algorithm``
     
    * ``x-amz-server-side-encryption-customer-key``
     
    * ``x-amz-server-side-encryption-customer-key-MD5``
    

     

    For more information about SSE-C, see `Server-Side Encryption (Using Customer-Provided Encryption Keys) <https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html>`__ in the *Amazon S3 User Guide*.

     

    .. note::

      

      This functionality is not supported for directory buckets.

      

        Please note that this parameter is automatically populated if it is not provided. Including this parameter is not required



  
  :type RequestPayer: string
  :param RequestPayer: Ignored by COS if present.

  
  :type PartNumber: integer
  :param PartNumber: 

    Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' GET request for the part specified. Useful for downloading just a part of an object.

    

  
  :type ExpectedBucketOwner: string
  :param ExpectedBucketOwner: Ignored by COS if present.

  
  
  :rtype: dict
  :returns: 
    
    **Response Syntax**

    
    ::

      {
          'Body': StreamingBody(),
          'DeleteMarker': True|False,
          'AcceptRanges': 'string',
          'Expiration': 'string',
          'Restore': 'string',
          'LastModified': datetime(2015, 1, 1),
          'ContentLength': 123,
          'ETag': 'string',
          'MissingMeta': 123,
          'VersionId': 'string',
          'CacheControl': 'string',
          'ContentDisposition': 'string',
          'ContentEncoding': 'string',
          'ContentLanguage': 'string',
          'ContentRange': 'string',
          'ContentType': 'string',
          'Expires': datetime(2015, 1, 1),
          'WebsiteRedirectLocation': 'string',
          'ServerSideEncryption': 'AES256',
          'Metadata': {
              'string': 'string'
          },
          'RetentionExpirationDate': datetime(2015, 1, 1),
          'RetentionLegalHoldCount': 123,
          'RetentionPeriod': 123,
          'SSECustomerAlgorithm': 'string',
          'SSECustomerKeyMD5': 'string',
          'SSEKMSKeyId': 'string',
          'StorageClass': 'ACCELERATED'|'STANDARD'|'REDUCED_REDUNDANCY'|'STANDARD_IA'|'ONEZONE_IA'|'INTELLIGENT_TIERING'|'GLACIER'|'DEEP_ARCHIVE'|'OUTPOSTS'|'GLACIER_IR',
          'RequestCharged': 'requester',
          'ReplicationStatus': 'COMPLETE'|'PENDING'|'FAILED'|'REPLICA',
          'PartsCount': 123,
          'TagCount': 123,
          'ObjectLockMode': 'GOVERNANCE'|'COMPLIANCE',
          'ObjectLockRetainUntilDate': datetime(2015, 1, 1),
          'ObjectLockLegalHoldStatus': 'ON'|'OFF',
          'IbmRestoredCopyStorageClass': 'ACCELERATED'|'STANDARD'|'REDUCED_REDUNDANCY'|'STANDARD_IA'|'ONEZONE_IA'|'INTELLIGENT_TIERING'|'GLACIER'|'DEEP_ARCHIVE'|'OUTPOSTS'|'GLACIER_IR',
          'IbmTransition': 'string'
      }
      
    **Response Structure**

    

    - *(dict) --* 
      

      - **Body** (:class:`.StreamingBody`) -- 

        Object data.

        
      

      - **DeleteMarker** *(boolean) --* 

        Indicates whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.

         

        .. note::

          

          
          * If the current version of the object is a delete marker, Amazon S3 behaves as if the object was deleted and includes ``x-amz-delete-marker: true`` in the response.
           
          * If the specified version in the request is a delete marker, the response returns a ``405 Method Not Allowed`` error and the ``Last-Modified: timestamp`` response header.
          

          

        
      

      - **AcceptRanges** *(string) --* 

        Indicates that a range of bytes was specified in the request.

        
      

      - **Expiration** *(string) --* 

        If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the ``expiry-date`` and ``rule-id`` key-value pairs providing object expiration information. The value of the ``rule-id`` is URL-encoded.

        
      

      - **Restore** *(string) --* 

        Provides information about object restoration action and expiration time of the restored object copy.

        
      

      - **LastModified** *(datetime) --* 

        Creation date of the object.

        
      

      - **ContentLength** *(integer) --* 

        Size of the body in bytes.

        
      

      - **ETag** *(string) --* 

        An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.

        
      

      - **MissingMeta** *(integer) --* 

        This is set to the number of metadata entries not returned in ``x-amz-meta`` headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.

        
      

      - **VersionId** *(string) --* 

        Version of the object.

        
      

      - **CacheControl** *(string) --* 

        Specifies caching behavior along the request/reply chain.

        
      

      - **ContentDisposition** *(string) --* 

        Specifies presentational information for the object.

        
      

      - **ContentEncoding** *(string) --* 

        Indicates what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.

        
      

      - **ContentLanguage** *(string) --* 

        The language the content is in.

        
      

      - **ContentRange** *(string) --* 

        The portion of the object returned in the response.

        
      

      - **ContentType** *(string) --* 

        A standard MIME type describing the format of the object data.

        
      

      - **Expires** *(datetime) --* 

        The date and time at which the object is no longer cacheable.

        
      

      - **WebsiteRedirectLocation** *(string) --* 

        If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.

        
      

      - **ServerSideEncryption** *(string) --* 

        The server-side encryption algorithm used when you store this object in Amazon S3 (for example, ``AES256``, ``aws:kms``, ``aws:kms:dsse``).

         

        .. note::

          

          For directory buckets, only server-side encryption with Amazon S3 managed keys (SSE-S3) ( ``AES256``) is supported.

          

        
      

      - **Metadata** *(dict) --* 

        A map of metadata to store with the object in S3.

        
        

        - *(string) --* 
          

          - *(string) --* 
    
  
      

      - **RetentionExpirationDate** *(datetime) --* Date on which it will be legal to delete or modify the object. You can only specify this or the Retention-Period header. If both are specified a 400 error will be returned. If neither is specified the bucket's DefaultRetention period will be used.
      

      - **RetentionLegalHoldCount** *(integer) --* Returns the count of legal holds on the object. If there are no legal holds, the header is not returned
      

      - **RetentionPeriod** *(integer) --* Retention period to store on the object in seconds. If this field and Retention-Expiration-Date are specified a 400 error is returned. If neither is specified the bucket's DefaultRetention period will be used. 0 is a legal value assuming the bucket's minimum retention period is also 0.
      

      - **SSECustomerAlgorithm** *(string) --* 

        If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.

        
      

      - **SSECustomerKeyMD5** *(string) --* 

        If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round-trip message integrity verification of the customer-provided encryption key.

        
      

      - **SSEKMSKeyId** *(string) --* 

        If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for the object.

        
      

      - **StorageClass** *(string) --* 

        Provides storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.

        
      

      - **RequestCharged** *(string) --* 

        If present, indicates that the requester was successfully charged for the request.

        
      

      - **ReplicationStatus** *(string) --* 

        Amazon S3 can return this if your request involves a bucket that is either a source or destination in a replication rule.

        
      

      - **PartsCount** *(integer) --* 

        The count of parts this object has. This value is only returned if you specify ``partNumber`` in your request and the object was uploaded as a multipart upload.

        
      

      - **TagCount** *(integer) --* 

        The number of tags, if any, on the object, when you have the relevant permission to read object tags.

         

        You can use `GetObjectTagging <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html>`__ to retrieve the tag set associated with an object.

         

        .. note::

          

          This functionality is not supported for directory buckets.

          

        
      

      - **ObjectLockMode** *(string) --* 

        The Object Lock mode currently in place for this object.

        
      

      - **ObjectLockRetainUntilDate** *(datetime) --* 

        The date and time when this object's Object Lock will expire.

        
      

      - **ObjectLockLegalHoldStatus** *(string) --* 

        Indicates whether this object has an active legal hold. This field is only returned if you have permission to view an object's legal hold status.

        
      

      - **IbmRestoredCopyStorageClass** *(string) --* This header is only included if an object has transition metadata. This header will indicate the transition storage class and time of transition. If this header and the x-amz-restore header are both included, this header will indicate the time at which the object was originally archived.
      

      - **IbmTransition** *(string) --* This header is only included if an object has transition metadata. This header will indicate the transition storage class and time of transition. If this header and the x-amz-restore header are both included, this header will indicate the time at which the object was originally archived.
  