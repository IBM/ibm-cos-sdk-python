:doc:`MultipartUpload <index>` / Collection / parts

*****
parts
*****



.. py:attribute:: S3.MultipartUpload.parts

  A collection of MultipartUploadPart resources.A MultipartUploadPart Collection will include all resources by default, and extreme caution should be taken when performing actions on all resources.

  .. py:method:: all()

    Creates an iterable of all MultipartUploadPart resources in the collection.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListParts>`_    


    **Request Syntax**
    ::

      multipart_upload_part_iterator = multipart_upload.parts.all()
      
      
    
    :rtype: list(:py:class:`s3.MultipartUploadPart`)
    :returns: A list of MultipartUploadPart resources
    

  .. py:method:: filter(**kwargs)

    Creates an iterable of all MultipartUploadPart resources in the collection filtered by kwargs passed to method. A MultipartUploadPart collection will include all resources by default if no filters are provided, and extreme caution should be taken when performing actions on all resources.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListParts>`_    


    **Request Syntax**
    ::

      multipart_upload_part_iterator = multipart_upload.parts.filter(
          MaxParts=123,
          MirrorDestination='string',
          PartNumberMarker=123,
          RequestPayer='requester',
          ExpectedBucketOwner='string'
      )
      
    :type MaxParts: integer
    :param MaxParts: 

      Sets the maximum number of parts to return.

      

    
    :type MirrorDestination: string
    :param MirrorDestination: Mirror source for object reads.

    
    :type PartNumberMarker: integer
    :param PartNumberMarker: 

      Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.

      

    
    :type RequestPayer: string
    :param RequestPayer: Ignored by COS if present.

    
    :type ExpectedBucketOwner: string
    :param ExpectedBucketOwner: 

      The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code ``403 Forbidden`` (access denied).

      

    
    
    :rtype: list(:py:class:`s3.MultipartUploadPart`)
    :returns: A list of MultipartUploadPart resources
    

  .. py:method:: limit(**kwargs)

    Creates an iterable up to a specified amount of MultipartUploadPart resources in the collection.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListParts>`_    


    **Request Syntax**
    ::

      multipart_upload_part_iterator = multipart_upload.parts.limit(
          count=123
      )
      
    :type count: integer
    :param count: The limit to the number of resources in the iterable.

    
    
    :rtype: list(:py:class:`s3.MultipartUploadPart`)
    :returns: A list of MultipartUploadPart resources
    

  .. py:method:: page_size(**kwargs)

    Creates an iterable of all MultipartUploadPart resources in the collection, but limits the number of items returned by each service call by the specified amount.

    See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/ListParts>`_    


    **Request Syntax**
    ::

      multipart_upload_part_iterator = multipart_upload.parts.page_size(
          count=123
      )
      
    :type count: integer
    :param count: The number of items returned by each service call

    
    
    :rtype: list(:py:class:`s3.MultipartUploadPart`)
    :returns: A list of MultipartUploadPart resources
    