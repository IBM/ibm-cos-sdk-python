:doc:`S3 <../../s3>` / Client / put_bucket_acl

**************
put_bucket_acl
**************



.. py:method:: S3.Client.put_bucket_acl(**kwargs)

  

  Sets the permissions on an existing bucket using access control lists (ACL). For more information, see `Using ACLs <https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html>`__. To set the ACL of a bucket, you must have ``WRITE_ACP`` permission.

   

  You can use one of the following two ways to set a bucket's permissions:

   

  
  * Specify the ACL in the request body
   
  * Specify permissions using request headers
  

   

  .. note::

    

    You cannot specify access permission using both the body and the request headers.

    

   

  Depending on your application needs, you may choose to set the ACL on a bucket using either the request body or the headers. For example, if you have an existing application that updates a bucket ACL using the request body, then you can continue to use that approach.

   

  .. warning::

     

    If your bucket uses the bucket owner enforced setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions. You must use policies to grant access to your bucket and the objects in it. Requests to set ACLs or update ACLs fail and return the ``AccessControlListNotSupported`` error code. Requests to read ACLs are still supported. For more information, see `Controlling object ownership <https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html>`__ in the *Amazon S3 User Guide*.

     

   

  **Access Permissions**

   

  You can set access permissions using one of the following methods:

   

  
  * Specify a canned ACL with the ``x-amz-acl`` request header. Amazon S3 supports a set of predefined ACLs, known as *canned ACLs*. Each canned ACL has a predefined set of grantees and permissions. Specify the canned ACL name as the value of ``x-amz-acl``. If you use this header, you cannot use other access control-specific headers in your request. For more information, see `Canned ACL <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL>`__.
   
  * Specify access permissions explicitly with the ``x-amz-grant-read``, ``x-amz-grant-read-acp``, ``x-amz-grant-write-acp``, and ``x-amz-grant-full-control`` headers. When using these headers, you specify explicit access permissions and grantees (Amazon Web Services accounts or Amazon S3 groups) who will receive the permission. If you use these ACL-specific headers, you cannot use the ``x-amz-acl`` header to set a canned ACL. These parameters map to the set of permissions that Amazon S3 supports in an ACL. For more information, see `Access Control List (ACL) Overview <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html>`__. You specify each grantee as a type=value pair, where the type is one of the following: 

    
    * ``id`` – if the value specified is the canonical user ID of an Amazon Web Services account
     
    * ``uri`` – if you are granting permissions to a predefined group
     
    * ``emailAddress`` – if the value specified is the email address of an Amazon Web Services account 

    .. note::

      Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: 

        
        * US East (N. Virginia)
         
        * US West (N. California)
         
        * US West (Oregon)
         
        * Asia Pacific (Singapore)
         
        * Asia Pacific (Sydney)
         
        * Asia Pacific (Tokyo)
         
        * Europe (Ireland)
         
        * South America (São Paulo)
        

       

      For a list of all the Amazon S3 supported Regions and endpoints, see `Regions and Endpoints <https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region>`__ in the Amazon Web Services General Reference.

      

    
    

   

  For example, the following ``x-amz-grant-write`` header grants create, overwrite, and delete objects permission to LogDelivery group predefined by Amazon S3 and two Amazon Web Services accounts identified by their email addresses.

   

  ``x-amz-grant-write: uri="http://acs.amazonaws.com/groups/s3/LogDelivery", id="111122223333", id="555566667777"``

  
  

   

  You can use either a canned ACL or specify access permissions explicitly. You cannot do both.

   

  **Grantee Values**

   

  You can specify the person (grantee) to whom you're assigning access rights (using request elements) in the following ways:

   

  
  * By the person's ID: ``<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser"><ID><>ID<></ID><DisplayName><>GranteesEmail<></DisplayName> </Grantee>`` DisplayName is optional and ignored in the request
   
  * By URI: ``<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group"><URI><>http://acs.amazonaws.com/groups/global/AuthenticatedUsers<></URI></Grantee>``
   
  * By Email address: ``<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="AmazonCustomerByEmail"><EmailAddress><>Grantees@email.com<></EmailAddress>lt;/Grantee>`` The grantee is resolved to the CanonicalUser and, in a response to a GET Object acl request, appears as the CanonicalUser. 

  .. note::

    Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: 

      
      * US East (N. Virginia)
       
      * US West (N. California)
       
      * US West (Oregon)
       
      * Asia Pacific (Singapore)
       
      * Asia Pacific (Sydney)
       
      * Asia Pacific (Tokyo)
       
      * Europe (Ireland)
       
      * South America (São Paulo)
      

     

    For a list of all the Amazon S3 supported Regions and endpoints, see `Regions and Endpoints <https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region>`__ in the Amazon Web Services General Reference.

    

  
  

   

  **Related Resources**

   

  
  * `CreateBucket <https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html>`__
   
  * `DeleteBucket <https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html>`__
   
  * `GetObjectAcl <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html>`__
  

  

  See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketAcl>`_  


  **Request Syntax**
  ::

    response = client.put_bucket_acl(
        ACL='private'|'public-read'|'public-read-write'|'authenticated-read',
        AccessControlPolicy={
            'Grants': [
                {
                    'Grantee': {
                        'DisplayName': 'string',
                        'EmailAddress': 'string',
                        'ID': 'string',
                        'Type': 'CanonicalUser'|'AmazonCustomerByEmail'|'Group',
                        'URI': 'string'
                    },
                    'Permission': 'FULL_CONTROL'|'WRITE'|'WRITE_ACP'|'READ'|'READ_ACP'
                },
            ],
            'Owner': {
                'DisplayName': 'string',
                'ID': 'string'
            }
        },
        Bucket='string',
        GrantFullControl='string',
        GrantRead='string',
        GrantReadACP='string',
        GrantWrite='string',
        GrantWriteACP='string',
        ExpectedBucketOwner='string'
    )
    
  :type ACL: string
  :param ACL: 

    The canned ACL to apply to the bucket.

    

  
  :type AccessControlPolicy: dict
  :param AccessControlPolicy: 

    Contains the elements that set the ACL permissions for an object per grantee.

    

  
    - **Grants** *(list) --* 

      A list of grants.

      

    
      - *(dict) --* 

        Container for grant information.

        

      
        - **Grantee** *(dict) --* 

          The person being granted permissions.

          

        
          - **DisplayName** *(string) --* 

            Screen name of the grantee.

            

          
          - **EmailAddress** *(string) --* 

            Email address of the grantee.

             

            .. note::

              

              Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions:

               

              
              * US East (N. Virginia)
               
              * US West (N. California)
               
              * US West (Oregon)
               
              * Asia Pacific (Singapore)
               
              * Asia Pacific (Sydney)
               
              * Asia Pacific (Tokyo)
               
              * Europe (Ireland)
               
              * South America (São Paulo)
              

               

              For a list of all the Amazon S3 supported Regions and endpoints, see `Regions and Endpoints <https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region>`__ in the Amazon Web Services General Reference.

              

            

          
          - **ID** *(string) --* 

            The canonical user ID of the grantee.

            

          
          - **Type** *(string) --* **[REQUIRED]** 

            Type of grantee

            

          
          - **URI** *(string) --* 

            URI of the grantee group.

            

          
        
        - **Permission** *(string) --* 

          Specifies the permission given to the grantee.

          

        
      
  
    - **Owner** *(dict) --* 

      Container for the bucket owner's display name and ID.

      

    
      - **DisplayName** *(string) --* 

        Container for the display name of the owner.

        

      
      - **ID** *(string) --* 

        Container for the ID of the owner.

        

      
    
  
  :type Bucket: string
  :param Bucket: **[REQUIRED]** 

    The bucket to which to apply the ACL.

    

  
  :type GrantFullControl: string
  :param GrantFullControl: 

    Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.

    

  
  :type GrantRead: string
  :param GrantRead: 

    Allows grantee to list the objects in the bucket.

    

  
  :type GrantReadACP: string
  :param GrantReadACP: 

    Allows grantee to read the bucket ACL.

    

  
  :type GrantWrite: string
  :param GrantWrite: 

    Allows grantee to create new objects in the bucket.

     

    For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.

    

  
  :type GrantWriteACP: string
  :param GrantWriteACP: 

    Allows grantee to write the ACL for the applicable bucket.

    

  
  :type ExpectedBucketOwner: string
  :param ExpectedBucketOwner: Ignored by COS if present.

  
  
  :returns: None

  **Examples**

  The following example replaces existing ACL on a bucket. The ACL grants the bucket owner (specified using the owner ID) and write permission to the LogDelivery group. Because this is a replace operation, you must specify all the grants in your request. To incrementally add or remove ACL grants, you might use the console.
  ::

    response = client.put_bucket_acl(
        Bucket='examplebucket',
        GrantFullControl='id=examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484',
        GrantWrite='uri=http://acs.amazonaws.com/groups/s3/LogDelivery',
    )
    
    print(response)

  
  Expected Output:
  ::

    {
        'ResponseMetadata': {
            '...': '...',
        },
    }

  