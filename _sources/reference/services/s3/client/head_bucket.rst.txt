:doc:`S3 <../../s3>` / Client / head_bucket

***********
head_bucket
***********



.. py:method:: S3.Client.head_bucket(**kwargs)

  

  You can use this operation to determine if a bucket exists and if you have permission to access it. The action returns a ``200 OK`` if the bucket exists and you have permission to access it.

   

  If the bucket does not exist or you do not have permission to access it, the ``HEAD`` request returns a generic ``400 Bad Request``, ``403 Forbidden`` or ``404 Not Found`` code. A message body is not included, so you cannot determine the exception beyond these error codes.

   

  .. note::

    

    **Directory buckets** - You must make requests for this API operation to the Zonal endpoint. These endpoints support virtual-hosted-style requests in the format ``https://bucket_name.s3express-az_id.region.amazonaws.com``. Path-style requests are not supported. For more information, see `Regional and Zonal endpoints <https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-Regions-and-Zones.html>`__ in the *Amazon S3 User Guide*.

    

    Authentication and authorization  

  All ``HeadBucket`` requests must be authenticated and signed by using IAM credentials (access key ID and secret access key for the IAM identities). All headers with the ``x-amz-`` prefix, including ``x-amz-copy-source``, must be signed. For more information, see `REST Authentication <https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html>`__.

   

  **Directory bucket** - You must use IAM credentials to authenticate and authorize your access to the ``HeadBucket`` API operation, instead of using the temporary security credentials through the ``CreateSession`` API operation.

   

  Amazon Web Services CLI or SDKs handles authentication and authorization on your behalf.

    Permissions  

  

   

  
  * **General purpose bucket permissions** - To use this operation, you must have permissions to perform the ``s3:ListBucket`` action. The bucket owner has this permission by default and can grant this permission to others. For more information about permissions, see `Managing access permissions to your Amazon S3 resources <https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html>`__ in the *Amazon S3 User Guide*.
   
  * **Directory bucket permissions** - You must have the ``s3express:CreateSession`` permission in the ``Action`` element of a policy. By default, the session is in the ``ReadWrite`` mode. If you want to restrict the access, you can explicitly set the ``s3express:SessionMode`` condition key to ``ReadOnly`` on the bucket. For more information about example bucket policies, see `Example bucket policies for S3 Express One Zone <https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-security-iam-example-bucket-policies.html>`__ and `Amazon Web Services Identity and Access Management (IAM) identity-based policies for S3 Express One Zone <https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-security-iam-identity-policies.html>`__ in the *Amazon S3 User Guide*.
  

    HTTP Host header syntax  

  **Directory buckets** - The HTTP Host header syntax is ``Bucket_name.s3express-az_id.region.amazonaws.com``.

  

  See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadBucket>`_  


  **Request Syntax**
  ::

    response = client.head_bucket(
        Bucket='string',
        ExpectedBucketOwner='string'
    )
    
  :type Bucket: string
  :param Bucket: **[REQUIRED]** 

    The bucket name.

     

    When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form *AccessPointName*-*AccountId*.s3-accesspoint.*Region*.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see `Using access points <https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html>`__ in the *Amazon S3 User Guide*.

     

    When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form ``AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see `Using Amazon S3 on Outposts <https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html>`__ in the *Amazon S3 User Guide*.

    

  
  :type ExpectedBucketOwner: string
  :param ExpectedBucketOwner: Ignored by COS if present.

  
  
  :rtype: dict
  :returns: 
    
    **Response Syntax**

    
    ::

      {
          'IBMSSEKPEnabled': True|False,
          'IBMSSEKPCrkId': 'string'
      }
      
    **Response Structure**

    

    - *(dict) --* 
      

      - **IBMSSEKPEnabled** *(boolean) --* The bucket encryption enabled or not.
      

      - **IBMSSEKPCrkId** *(string) --* CRK ID of the Bucket encryption
  
  **Exceptions**
  
  *   :py:class:`S3.Client.exceptions.NoSuchBucket`

  

  **Examples**

  This operation checks to see if a bucket exists.
  ::

    response = client.head_bucket(
        Bucket='acl1',
    )
    
    print(response)

  
  Expected Output:
  ::

    {
        'ResponseMetadata': {
            '...': '...',
        },
    }

  