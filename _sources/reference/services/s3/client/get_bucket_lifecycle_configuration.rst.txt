:doc:`S3 <../../s3>` / Client / get_bucket_lifecycle_configuration

**********************************
get_bucket_lifecycle_configuration
**********************************



.. py:method:: S3.Client.get_bucket_lifecycle_configuration(**kwargs)

  

  .. note::

    

    Bucket lifecycle configuration now supports specifying a lifecycle rule using an object key name prefix, one or more object tags, or a combination of both. Accordingly, this section describes the latest API. The response describes the new filter element that you can use to specify a filter to select a subset of objects to which the rule applies. If you are using a previous version of the lifecycle configuration, it still works. For the earlier action, see `GetBucketLifecycle <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html>`__.

    

   

  Returns the lifecycle configuration information set on the bucket. For information about lifecycle configuration, see `Object Lifecycle Management <https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html>`__.

   

  To use this operation, you must have permission to perform the ``s3:GetLifecycleConfiguration`` action. The bucket owner has this permission, by default. The bucket owner can grant this permission to others. For more information about permissions, see `Permissions Related to Bucket Subresource Operations <https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources>`__ and `Managing Access Permissions to Your Amazon S3 Resources <https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html>`__.

   

  ``GetBucketLifecycleConfiguration`` has the following special error:

   

  
  * Error code: ``NoSuchLifecycleConfiguration`` 

    
    * Description: The lifecycle configuration does not exist.
     
    * HTTP Status Code: 404 Not Found
     
    * SOAP Fault Code Prefix: Client
    

  
  

   

  The following operations are related to ``GetBucketLifecycleConfiguration``:

   

  
  * `GetBucketLifecycle <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html>`__
   
  * `PutBucketLifecycle <https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html>`__
   
  * `DeleteBucketLifecycle <https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html>`__
  

  

  See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketLifecycleConfiguration>`_  


  **Request Syntax**
  ::

    response = client.get_bucket_lifecycle_configuration(
        Bucket='string',
        ExpectedBucketOwner='string'
    )
    
  :type Bucket: string
  :param Bucket: **[REQUIRED]** 

    The name of the bucket for which to get the lifecycle information.

    

  
  :type ExpectedBucketOwner: string
  :param ExpectedBucketOwner: Ignored by COS if present.

  
  
  :rtype: dict
  :returns: 
    
    **Response Syntax**

    
    ::

      {
          'Rules': [
              {
                  'Expiration': {
                      'Date': datetime(2015, 1, 1),
                      'Days': 123,
                      'ExpiredObjectDeleteMarker': True|False
                  },
                  'ID': 'string',
                  'Prefix': 'string',
                  'Filter': {
                      'Prefix': 'string',
                      'Tag': {
                          'Key': 'string',
                          'Value': 'string'
                      },
                      'ObjectSizeGreaterThan': 123,
                      'ObjectSizeLessThan': 123,
                      'And': {
                          'Prefix': 'string',
                          'Tags': [
                              {
                                  'Key': 'string',
                                  'Value': 'string'
                              },
                          ],
                          'ObjectSizeGreaterThan': 123,
                          'ObjectSizeLessThan': 123
                      }
                  },
                  'Status': 'Enabled'|'Disabled',
                  'Transitions': [
                      {
                          'Date': datetime(2015, 1, 1),
                          'Days': 123,
                          'StorageClass': 'ACCELERATED'|'GLACIER'|'STANDARD_IA'|'ONEZONE_IA'|'INTELLIGENT_TIERING'|'DEEP_ARCHIVE'|'GLACIER_IR'
                      },
                  ],
                  'NoncurrentVersionExpiration': {
                      'NoncurrentDays': 123,
                      'NewerNoncurrentVersions': 123
                  },
                  'AbortIncompleteMultipartUpload': {
                      'DaysAfterInitiation': 123
                  }
              },
          ]
      }
      
    **Response Structure**

    

    - *(dict) --* 
      

      - **Rules** *(list) --* 

        Container for a lifecycle rule.

        
        

        - *(dict) --* 

          A lifecycle rule for individual objects in an Amazon S3 bucket.

           

          For more information see, `Managing your storage lifecycle <https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html>`__ in the *Amazon S3 User Guide*.

          
          

          - **Expiration** *(dict) --* 

            Specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker.

            
            

            - **Date** *(datetime) --* 

              Indicates at what date the object is to be moved or deleted. The date value must conform to the ISO 8601 format. The time is always midnight UTC.

              
            

            - **Days** *(integer) --* 

              Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.

              
            

            - **ExpiredObjectDeleteMarker** *(boolean) --* 

              Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.

              
        
          

          - **ID** *(string) --* 

            Unique identifier for the rule. The value cannot be longer than 255 characters.

            
          

          - **Prefix** *(string) --* 

            Prefix identifying one or more objects to which the rule applies. This is no longer used; use ``Filter`` instead.

             

            .. warning::

               

              Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see `XML related object key constraints <https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints>`__.

              

            
          

          - **Filter** *(dict) --* 

            The ``Filter`` is used to identify objects that a Lifecycle Rule applies to. A ``Filter`` must have exactly one of ``Prefix``, ``Tag``, or ``And`` specified. ``Filter`` is required if the ``LifecycleRule`` does not contain a ``Prefix`` element.

            
            

            - **Prefix** *(string) --* 

              Prefix identifying one or more objects to which the rule applies.

               

              .. warning::

                 

                Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see `XML related object key constraints <https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints>`__.

                

              
            

            - **Tag** *(dict) --* 

              This tag must exist in the object's tag set in order for the rule to apply.

              
              

              - **Key** *(string) --* 

                Name of the object key.

                
              

              - **Value** *(string) --* 

                Value of the tag.

                
          
            

            - **ObjectSizeGreaterThan** *(integer) --* 

              Minimum object size to which the rule applies.

              
            

            - **ObjectSizeLessThan** *(integer) --* 

              Maximum object size to which the rule applies.

              
            

            - **And** *(dict) --* 

              This is used in a Lifecycle Rule Filter to apply a logical AND to two or more predicates. The Lifecycle Rule will apply to any object matching all of the predicates configured inside the And operator.

              
              

              - **Prefix** *(string) --* 

                Prefix identifying one or more objects to which the rule applies.

                
              

              - **Tags** *(list) --* 

                All of these tags must exist in the object's tag set in order for the rule to apply.

                
                

                - *(dict) --* 

                  A container of a key value name pair.

                  
                  

                  - **Key** *(string) --* 

                    Name of the object key.

                    
                  

                  - **Value** *(string) --* 

                    Value of the tag.

                    
              
            
              

              - **ObjectSizeGreaterThan** *(integer) --* 

                Minimum object size to which the rule applies.

                
              

              - **ObjectSizeLessThan** *(integer) --* 

                Maximum object size to which the rule applies.

                
          
        
          

          - **Status** *(string) --* 

            If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied.

            
          

          - **Transitions** *(list) --* 

            Specifies when an Amazon S3 object transitions to a specified storage class.

            
            

            - *(dict) --* 

              Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see `Transitioning Objects Using Amazon S3 Lifecycle <https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html>`__ in the *Amazon S3 User Guide*.

              
              

              - **Date** *(datetime) --* 

                Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.

                
              

              - **Days** *(integer) --* 

                Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.

                
              

              - **StorageClass** *(string) --* 

                The storage class to which you want the object to transition.

                
          
        
          

          - **NoncurrentVersionExpiration** *(dict) --* 

            Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object's lifetime.

            
            

            - **NoncurrentDays** *(integer) --* 

              Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. The value must be a non-zero positive integer. For information about the noncurrent days calculations, see `How Amazon S3 Calculates When an Object Became Noncurrent <https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations>`__ in the *Amazon S3 User Guide*.

              
            

            - **NewerNoncurrentVersions** *(integer) --* Ignored by COS if present.
        
          

          - **AbortIncompleteMultipartUpload** *(dict) --* 

            Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see `Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Configuration <https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config>`__ in the *Amazon S3 User Guide*.

            
            

            - **DaysAfterInitiation** *(integer) --* 

              Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.

              
        
      
    
  

  **Examples**

  The following example retrieves lifecycle configuration on set on a bucket. 
  ::

    response = client.get_bucket_lifecycle_configuration(
        Bucket='examplebucket',
    )
    
    print(response)

  
  Expected Output:
  ::

    {
        'Rules': [
            {
                'ID': 'Rule for TaxDocs/',
                'Prefix': 'TaxDocs',
                'Status': 'Enabled',
                'Transitions': [
                    {
                        'Days': 365,
                        'StorageClass': 'STANDARD_IA',
                    },
                ],
            },
        ],
        'ResponseMetadata': {
            '...': '...',
        },
    }

  