:doc:`S3 <../../s3>` / Client / get_bucket_cors

***************
get_bucket_cors
***************



.. py:method:: S3.Client.get_bucket_cors(**kwargs)

  

  Returns the Cross-Origin Resource Sharing (CORS) configuration information set for the bucket.

   

  To use this operation, you must have permission to perform the ``s3:GetBucketCORS`` action. By default, the bucket owner has this permission and can grant it to others.

   

  For more information about CORS, see `Enabling Cross-Origin Resource Sharing <https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html>`__.

   

  The following operations are related to ``GetBucketCors``:

   

  
  * `PutBucketCors <https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html>`__
   
  * `DeleteBucketCors <https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html>`__
  

  

  See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/GetBucketCors>`_  


  **Request Syntax**
  ::

    response = client.get_bucket_cors(
        Bucket='string',
        ExpectedBucketOwner='string',
        MirrorDestination='string'
    )
    
  :type Bucket: string
  :param Bucket: **[REQUIRED]** 

    The bucket name for which to get the cors configuration.

    

  
  :type ExpectedBucketOwner: string
  :param ExpectedBucketOwner: Ignored by COS if present.

  
  :type MirrorDestination: string
  :param MirrorDestination: Mirror source for object reads.

  
  
  :rtype: dict
  :returns: 
    
    **Response Syntax**

    
    ::

      {
          'CORSRules': [
              {
                  'ID': 'string',
                  'AllowedHeaders': [
                      'string',
                  ],
                  'AllowedMethods': [
                      'string',
                  ],
                  'AllowedOrigins': [
                      'string',
                  ],
                  'ExposeHeaders': [
                      'string',
                  ],
                  'MaxAgeSeconds': 123
              },
          ]
      }
      
    **Response Structure**

    

    - *(dict) --* 
      

      - **CORSRules** *(list) --* 

        A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.

        
        

        - *(dict) --* 

          Specifies a cross-origin access rule for an Amazon S3 bucket.

          
          

          - **ID** *(string) --* 

            Unique identifier for the rule. The value cannot be longer than 255 characters.

            
          

          - **AllowedHeaders** *(list) --* 

            Headers that are specified in the ``Access-Control-Request-Headers`` header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.

            
            

            - *(string) --* 
        
          

          - **AllowedMethods** *(list) --* 

            An HTTP method that you allow the origin to execute. Valid values are ``GET``, ``PUT``, ``HEAD``, ``POST``, and ``DELETE``.

            
            

            - *(string) --* 
        
          

          - **AllowedOrigins** *(list) --* 

            One or more origins you want customers to be able to access the bucket from.

            
            

            - *(string) --* 
        
          

          - **ExposeHeaders** *(list) --* 

            One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript ``XMLHttpRequest`` object).

            
            

            - *(string) --* 
        
          

          - **MaxAgeSeconds** *(integer) --* 

            The time in seconds that your browser is to cache the preflight response for the specified resource.

            
      
    
  

  **Examples**

  The following example returns cross-origin resource sharing (CORS) configuration set on a bucket.
  ::

    response = client.get_bucket_cors(
        Bucket='examplebucket',
    )
    
    print(response)

  
  Expected Output:
  ::

    {
        'CORSRules': [
            {
                'AllowedHeaders': [
                    'Authorization',
                ],
                'AllowedMethods': [
                    'GET',
                ],
                'AllowedOrigins': [
                    '*',
                ],
                'MaxAgeSeconds': 3000,
            },
        ],
        'ResponseMetadata': {
            '...': '...',
        },
    }

  