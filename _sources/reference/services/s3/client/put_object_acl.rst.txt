:doc:`S3 <../../s3>` / Client / put_object_acl

**************
put_object_acl
**************



.. py:method:: S3.Client.put_object_acl(**kwargs)

  

  Uses the ``acl`` subresource to set the access control list (ACL) permissions for a new or existing object in an S3 bucket. You must have ``WRITE_ACP`` permission to set the ACL of an object. For more information, see `What permissions can I grant? <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#permissions>`__ in the *Amazon S3 User Guide*.

   

  This action is not supported by Amazon S3 on Outposts.

   

  Depending on your application needs, you can choose to set the ACL on an object using either the request body or the headers. For example, if you have an existing application that updates a bucket ACL using the request body, you can continue to use that approach. For more information, see `Access Control List (ACL) Overview <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html>`__ in the *Amazon S3 User Guide*.

   

  .. warning::

     

    If your bucket uses the bucket owner enforced setting for S3 Object Ownership, ACLs are disabled and no longer affect permissions. You must use policies to grant access to your bucket and the objects in it. Requests to set ACLs or update ACLs fail and return the ``AccessControlListNotSupported`` error code. Requests to read ACLs are still supported. For more information, see `Controlling object ownership <https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html>`__ in the *Amazon S3 User Guide*.

     

   

  **Access Permissions**

   

  You can set access permissions using one of the following methods:

   

  
  * Specify a canned ACL with the ``x-amz-acl`` request header. Amazon S3 supports a set of predefined ACLs, known as canned ACLs. Each canned ACL has a predefined set of grantees and permissions. Specify the canned ACL name as the value of ``x-amz-ac``l. If you use this header, you cannot use other access control-specific headers in your request. For more information, see `Canned ACL <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL>`__.
   
  * Specify access permissions explicitly with the ``x-amz-grant-read``, ``x-amz-grant-read-acp``, ``x-amz-grant-write-acp``, and ``x-amz-grant-full-control`` headers. When using these headers, you specify explicit access permissions and grantees (Amazon Web Services accounts or Amazon S3 groups) who will receive the permission. If you use these ACL-specific headers, you cannot use ``x-amz-acl`` header to set a canned ACL. These parameters map to the set of permissions that Amazon S3 supports in an ACL. For more information, see `Access Control List (ACL) Overview <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html>`__. You specify each grantee as a type=value pair, where the type is one of the following: 

    
    * ``id`` – if the value specified is the canonical user ID of an Amazon Web Services account
     
    * ``uri`` – if you are granting permissions to a predefined group
     
    * ``emailAddress`` – if the value specified is the email address of an Amazon Web Services account 

    .. note::

      Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: 

        
        * US East (N. Virginia)
         
        * US West (N. California)
         
        * US West (Oregon)
         
        * Asia Pacific (Singapore)
         
        * Asia Pacific (Sydney)
         
        * Asia Pacific (Tokyo)
         
        * Europe (Ireland)
         
        * South America (São Paulo)
        

       

      For a list of all the Amazon S3 supported Regions and endpoints, see `Regions and Endpoints <https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region>`__ in the Amazon Web Services General Reference.

      

    
    

   

  For example, the following ``x-amz-grant-read`` header grants list objects permission to the two Amazon Web Services accounts identified by their email addresses.

   

  ``x-amz-grant-read: emailAddress="xyz@amazon.com", emailAddress="abc@amazon.com"``

  
  

   

  You can use either a canned ACL or specify access permissions explicitly. You cannot do both.

   

  **Grantee Values**

   

  You can specify the person (grantee) to whom you're assigning access rights (using request elements) in the following ways:

   

  
  * By the person's ID: ``<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="CanonicalUser"><ID><>ID<></ID><DisplayName><>GranteesEmail<></DisplayName> </Grantee>`` DisplayName is optional and ignored in the request.
   
  * By URI: ``<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Group"><URI><>http://acs.amazonaws.com/groups/global/AuthenticatedUsers<></URI></Grantee>``
   
  * By Email address: ``<Grantee xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="AmazonCustomerByEmail"><EmailAddress><>Grantees@email.com<></EmailAddress>lt;/Grantee>`` The grantee is resolved to the CanonicalUser and, in a response to a GET Object acl request, appears as the CanonicalUser. 

  .. note::

    Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions: 

      
      * US East (N. Virginia)
       
      * US West (N. California)
       
      * US West (Oregon)
       
      * Asia Pacific (Singapore)
       
      * Asia Pacific (Sydney)
       
      * Asia Pacific (Tokyo)
       
      * Europe (Ireland)
       
      * South America (São Paulo)
      

     

    For a list of all the Amazon S3 supported Regions and endpoints, see `Regions and Endpoints <https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region>`__ in the Amazon Web Services General Reference.

    

  
  

   

  **Versioning**

   

  The ACL of an object is set at the object version level. By default, PUT sets the ACL of the current version of an object. To set the ACL of a different version, use the ``versionId`` subresource.

   

  **Related Resources**

   

  
  * `CopyObject <https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html>`__
   
  * `GetObject <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html>`__
  

  

  See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutObjectAcl>`_  


  **Request Syntax**
  ::

    response = client.put_object_acl(
        ACL='private'|'public-read'|'public-read-write'|'authenticated-read'|'aws-exec-read'|'bucket-owner-read'|'bucket-owner-full-control',
        AccessControlPolicy={
            'Grants': [
                {
                    'Grantee': {
                        'DisplayName': 'string',
                        'EmailAddress': 'string',
                        'ID': 'string',
                        'Type': 'CanonicalUser'|'AmazonCustomerByEmail'|'Group',
                        'URI': 'string'
                    },
                    'Permission': 'FULL_CONTROL'|'WRITE'|'WRITE_ACP'|'READ'|'READ_ACP'
                },
            ],
            'Owner': {
                'DisplayName': 'string',
                'ID': 'string'
            }
        },
        Bucket='string',
        GrantFullControl='string',
        GrantRead='string',
        GrantReadACP='string',
        GrantWrite='string',
        GrantWriteACP='string',
        Key='string',
        RequestPayer='requester',
        VersionId='string',
        ExpectedBucketOwner='string'
    )
    
  :type ACL: string
  :param ACL: 

    The canned ACL to apply to the object. For more information, see `Canned ACL <https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL>`__.

    

  
  :type AccessControlPolicy: dict
  :param AccessControlPolicy: 

    Contains the elements that set the ACL permissions for an object per grantee.

    

  
    - **Grants** *(list) --* 

      A list of grants.

      

    
      - *(dict) --* 

        Container for grant information.

        

      
        - **Grantee** *(dict) --* 

          The person being granted permissions.

          

        
          - **DisplayName** *(string) --* 

            Screen name of the grantee.

            

          
          - **EmailAddress** *(string) --* 

            Email address of the grantee.

             

            .. note::

              

              Using email addresses to specify a grantee is only supported in the following Amazon Web Services Regions:

               

              
              * US East (N. Virginia)
               
              * US West (N. California)
               
              * US West (Oregon)
               
              * Asia Pacific (Singapore)
               
              * Asia Pacific (Sydney)
               
              * Asia Pacific (Tokyo)
               
              * Europe (Ireland)
               
              * South America (São Paulo)
              

               

              For a list of all the Amazon S3 supported Regions and endpoints, see `Regions and Endpoints <https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region>`__ in the Amazon Web Services General Reference.

              

            

          
          - **ID** *(string) --* 

            The canonical user ID of the grantee.

            

          
          - **Type** *(string) --* **[REQUIRED]** 

            Type of grantee

            

          
          - **URI** *(string) --* 

            URI of the grantee group.

            

          
        
        - **Permission** *(string) --* 

          Specifies the permission given to the grantee.

          

        
      
  
    - **Owner** *(dict) --* 

      Container for the bucket owner's display name and ID.

      

    
      - **DisplayName** *(string) --* 

        Container for the display name of the owner.

        

      
      - **ID** *(string) --* 

        Container for the ID of the owner.

        

      
    
  
  :type Bucket: string
  :param Bucket: **[REQUIRED]** 

    The bucket name that contains the object to which you want to attach the ACL.

     

    When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form *AccessPointName*-*AccountId*.s3-accesspoint.*Region*.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see `Using access points <https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html>`__ in the *Amazon S3 User Guide*.

    

  
  :type GrantFullControl: string
  :param GrantFullControl: 

    Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.

     

    This action is not supported by Amazon S3 on Outposts.

    

  
  :type GrantRead: string
  :param GrantRead: 

    Allows grantee to list the objects in the bucket.

     

    This action is not supported by Amazon S3 on Outposts.

    

  
  :type GrantReadACP: string
  :param GrantReadACP: 

    Allows grantee to read the bucket ACL.

     

    This action is not supported by Amazon S3 on Outposts.

    

  
  :type GrantWrite: string
  :param GrantWrite: 

    Allows grantee to create new objects in the bucket.

     

    For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.

    

  
  :type GrantWriteACP: string
  :param GrantWriteACP: 

    Allows grantee to write the ACL for the applicable bucket.

     

    This action is not supported by Amazon S3 on Outposts.

    

  
  :type Key: string
  :param Key: **[REQUIRED]** 

    Key for which the PUT action was initiated.

     

    When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form *AccessPointName*-*AccountId*.s3-accesspoint.*Region*.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see `Using access points <https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html>`__ in the *Amazon S3 User Guide*.

     

    When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form ``AccessPointName-AccountId.outpostID.s3-outposts.Region.amazonaws.com``. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see `Using Amazon S3 on Outposts <https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html>`__ in the *Amazon S3 User Guide*.

    

  
  :type RequestPayer: string
  :param RequestPayer: Ignored by COS if present.

  
  :type VersionId: string
  :param VersionId: 

    VersionId used to reference a specific version of the object.

    

  
  :type ExpectedBucketOwner: string
  :param ExpectedBucketOwner: Ignored by COS if present.

  
  
  :rtype: dict
  :returns: 
    
    **Response Syntax**

    
    ::

      {
          'RequestCharged': 'requester'
      }
      
    **Response Structure**

    

    - *(dict) --* 
      

      - **RequestCharged** *(string) --* 

        If present, indicates that the requester was successfully charged for the request.

        
  
  **Exceptions**
  
  *   :py:class:`S3.Client.exceptions.NoSuchKey`

  

  **Examples**

  The following example adds grants to an object ACL. The first permission grants user1 and user2 FULL_CONTROL and the AllUsers group READ permission.
  ::

    response = client.put_object_acl(
        AccessControlPolicy={
        },
        Bucket='examplebucket',
        GrantFullControl='emailaddress=user1@example.com,emailaddress=user2@example.com',
        GrantRead='uri=http://acs.amazonaws.com/groups/global/AllUsers',
        Key='HappyFace.jpg',
    )
    
    print(response)

  
  Expected Output:
  ::

    {
        'ResponseMetadata': {
            '...': '...',
        },
    }

  