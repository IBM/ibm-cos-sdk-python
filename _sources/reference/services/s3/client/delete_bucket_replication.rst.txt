:doc:`S3 <../../s3>` / Client / delete_bucket_replication

*************************
delete_bucket_replication
*************************



.. py:method:: S3.Client.delete_bucket_replication(**kwargs)

  

  .. note::

    

    This operation is not supported by directory buckets.

    

   

  Deletes the replication configuration from the bucket.

   

  To use this operation, you must have permissions to perform the ``s3:PutReplicationConfiguration`` action. The bucket owner has these permissions by default and can grant it to others. For more information about permissions, see `Permissions Related to Bucket Subresource Operations <https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources>`__ and `Managing Access Permissions to Your Amazon S3 Resources <https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html>`__.

   

  .. note::

    

    It can take a while for the deletion of a replication configuration to fully propagate.

    

   

  For information about replication configuration, see `Replication <https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html>`__ in the *Amazon S3 User Guide*.

   

  The following operations are related to ``DeleteBucketReplication``:

   

  
  * `PutBucketReplication <https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html>`__
   
  * `GetBucketReplication <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketReplication.html>`__
  

  

  See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/DeleteBucketReplication>`_  


  **Request Syntax**
  ::

    response = client.delete_bucket_replication(
        Bucket='string',
        ExpectedBucketOwner='string'
    )
    
  :type Bucket: string
  :param Bucket: **[REQUIRED]** 

    The bucket name.

    

  
  :type ExpectedBucketOwner: string
  :param ExpectedBucketOwner: 

    The account ID of the expected bucket owner. If the account ID that you provide does not match the actual owner of the bucket, the request fails with the HTTP status code ``403 Forbidden`` (access denied).

    

  
  
  :returns: None

  **Examples**

  The following example deletes replication configuration set on bucket.
  ::

    response = client.delete_bucket_replication(
        Bucket='example',
    )
    
    print(response)

  
  Expected Output:
  ::

    {
        'ResponseMetadata': {
            '...': '...',
        },
    }

  