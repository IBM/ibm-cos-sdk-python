:doc:`S3 <../../s3>` / Resource / Object

======
Object
======



.. note::

  Before using anything on this page, please refer to the resources :doc:`user guide <../../../../guide/resources>` for the most recent guidance on using resources.



.. py:class:: S3.Object(bucket_name,key)

  A resource representing an Amazon Simple Storage Service (S3) Object::

    
    import ibm_boto3
    
    s3 = ibm_boto3.resource('s3')
    object = s3.Object('bucket_name','key')

  :type bucket_name: string
  :param bucket_name: The Object's bucket_name identifier. This **must** be set.
  :type key: string
  :param key: The Object's key identifier. This **must** be set.
  




-----------
Identifiers
-----------



Identifiers are properties of a resource that are set upon instantiation of the resource.
For more information about identifiers refer to the :ref:`Resources Introduction Guide<identifiers_attributes_intro>`.

These are the resource's available identifiers:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  bucket_name
  key



----------
Attributes
----------



Attributes provide access to the properties of a resource. Attributes are lazy-loaded the first time one is accessed via the :py:meth:`load` method.
For more information about attributes refer to the :ref:`Resources Introduction Guide<identifiers_attributes_intro>`.

These are the resource's available attributes:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  accept_ranges
  cache_control
  content_disposition
  content_encoding
  content_language
  content_length
  content_type
  delete_marker
  e_tag
  expiration
  expires
  ibm_restored_copy_storage_class
  ibm_transition
  last_modified
  metadata
  missing_meta
  object_lock_legal_hold_status
  object_lock_mode
  object_lock_retain_until_date
  parts_count
  replication_status
  request_charged
  restore
  retention_expiration_date
  retention_legal_hold_count
  retention_period
  server_side_encryption
  sse_customer_algorithm
  sse_customer_key_md5
  ssekms_key_id
  storage_class
  version_id
  website_redirect_location



-------
Actions
-------



Actions call operations on resources.  They may automatically handle the passing in of arguments set from identifiers and some attributes.
For more information about actions refer to the :ref:`Resources Introduction Guide<actions_intro>`.

These are the resource's available actions:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  copy
  copy_from
  delete
  download_file
  download_fileobj
  get
  get_available_subresources
  initiate_multipart_upload
  load
  put
  reload
  restore_object
  upload_file
  upload_fileobj



-------------
Sub-resources
-------------



Sub-resources are methods that create a new instance of a child resource. This resource's identifiers get passed along to the child.
For more information about sub-resources refer to the :ref:`Resources Introduction Guide<subresources_intro>`.

These are the resource's available sub-resources:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  Acl
  Bucket
  MultipartUpload
  Protection
  Version



-------
Waiters
-------



Waiters provide an interface to wait for a resource to reach a specific state.
For more information about waiters refer to the :ref:`Resources Introduction Guide<waiters_intro>`.

These are the resource's available waiters:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  wait_until_exists
  wait_until_not_exists
