:doc:`Object <index>` / Waiter / wait_until_not_exists

*********************
wait_until_not_exists
*********************



.. py:method:: S3.Object.wait_until_not_exists(**kwargs)

  Waits until this Object is not exists. This method calls :py:meth:`S3.Waiter.object_not_exists.wait` which polls :py:meth:`S3.Client.head_object` every 5 seconds until a successful state is reached. An error is returned after 20 failed checks.

  See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/HeadObject>`_  


  **Request Syntax**
  ::

    object.wait_until_not_exists(
        IfMatch='string',
        IfModifiedSince=datetime(2015, 1, 1),
        IfNoneMatch='string',
        IfUnmodifiedSince=datetime(2015, 1, 1),
        MirrorDestination='string',
        Range='string',
        VersionId='string',
        SSECustomerAlgorithm='string',
        SSECustomerKey='string',
        RequestPayer='requester',
        PartNumber=123,
        ExpectedBucketOwner='string'
    )
    
  :type IfMatch: string
  :param IfMatch: 

    Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.

    

  
  :type IfModifiedSince: datetime
  :param IfModifiedSince: 

    Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.

    

  
  :type IfNoneMatch: string
  :param IfNoneMatch: 

    Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.

    

  
  :type IfUnmodifiedSince: datetime
  :param IfUnmodifiedSince: 

    Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.

    

  
  :type MirrorDestination: string
  :param MirrorDestination: Mirror source for object reads.

  
  :type Range: string
  :param Range: 

    HeadObject returns only the metadata for an object. If the Range is satisfiable, only the ``ContentLength`` is affected in the response. If the Range is not satisfiable, S3 returns a ``416 - Requested Range Not Satisfiable`` error.

    

  
  :type VersionId: string
  :param VersionId: 

    VersionId used to reference a specific version of the object.

    

  
  :type SSECustomerAlgorithm: string
  :param SSECustomerAlgorithm: 

    Specifies the algorithm to use to when encrypting the object (for example, AES256).

    

  
  :type SSECustomerKey: string
  :param SSECustomerKey: 

    Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the ``x-amz-server-side-encryption-customer-algorithm`` header.

    

  
  :type SSECustomerKeyMD5: string
  :param SSECustomerKeyMD5: 

    Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.

        Please note that this parameter is automatically populated if it is not provided. Including this parameter is not required



  
  :type RequestPayer: string
  :param RequestPayer: Ignored by COS if present.

  
  :type PartNumber: integer
  :param PartNumber: 

    Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.

    

  
  :type ExpectedBucketOwner: string
  :param ExpectedBucketOwner: Ignored by COS if present.

  
  :returns: None