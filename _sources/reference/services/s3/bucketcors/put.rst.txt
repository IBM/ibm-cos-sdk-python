:doc:`BucketCors <index>` / Action / put

***
put
***



.. py:method:: S3.BucketCors.put(**kwargs)

  

  Sets the ``cors`` configuration for your bucket. If the configuration exists, Amazon S3 replaces it.

   

  To use this operation, you must be allowed to perform the ``s3:PutBucketCORS`` action. By default, the bucket owner has this permission and can grant it to others.

   

  You set this configuration on a bucket so that the bucket can service cross-origin requests. For example, you might want to enable a request whose origin is ``http://www.example.com`` to access your Amazon S3 bucket at ``my.example.bucket.com`` by using the browser's ``XMLHttpRequest`` capability.

   

  To enable cross-origin resource sharing (CORS) on a bucket, you add the ``cors`` subresource to the bucket. The ``cors`` subresource is an XML document in which you configure rules that identify origins and the HTTP methods that can be executed on your bucket. The document is limited to 64 KB in size.

   

  When Amazon S3 receives a cross-origin request (or a pre-flight OPTIONS request) against a bucket, it evaluates the ``cors`` configuration on the bucket and uses the first ``CORSRule`` rule that matches the incoming browser request to enable a cross-origin request. For a rule to match, the following conditions must be met:

   

  
  * The request's ``Origin`` header must match ``AllowedOrigin`` elements.
   
  * The request method (for example, GET, PUT, HEAD, and so on) or the ``Access-Control-Request-Method`` header in case of a pre-flight ``OPTIONS`` request must be one of the ``AllowedMethod`` elements.
   
  * Every header specified in the ``Access-Control-Request-Headers`` request header of a pre-flight request must match an ``AllowedHeader`` element.
  

   

  For more information about CORS, go to `Enabling Cross-Origin Resource Sharing <https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html>`__ in the *Amazon S3 User Guide*.

   

  **Related Resources**

   

  
  * `GetBucketCors <https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketCors.html>`__
   
  * `DeleteBucketCors <https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html>`__
   
  * `RESTOPTIONSobject <https://docs.aws.amazon.com/AmazonS3/latest/API/RESTOPTIONSobject.html>`__
  

  

  See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketCors>`_  


  **Request Syntax**
  ::

    response = bucket_cors.put(
        CORSConfiguration={
            'CORSRules': [
                {
                    'ID': 'string',
                    'AllowedHeaders': [
                        'string',
                    ],
                    'AllowedMethods': [
                        'string',
                    ],
                    'AllowedOrigins': [
                        'string',
                    ],
                    'ExposeHeaders': [
                        'string',
                    ],
                    'MaxAgeSeconds': 123
                },
            ]
        },
        ExpectedBucketOwner='string'
    )
    
  :type CORSConfiguration: dict
  :param CORSConfiguration: **[REQUIRED]** 

    Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see `Enabling Cross-Origin Resource Sharing <https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html>`__ in the *Amazon S3 User Guide*.

    

  
    - **CORSRules** *(list) --* **[REQUIRED]** 

      A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.

      

    
      - *(dict) --* 

        Specifies a cross-origin access rule for an Amazon S3 bucket.

        

      
        - **ID** *(string) --* 

          Unique identifier for the rule. The value cannot be longer than 255 characters.

          

        
        - **AllowedHeaders** *(list) --* 

          Headers that are specified in the ``Access-Control-Request-Headers`` header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.

          

        
          - *(string) --* 

          
      
        - **AllowedMethods** *(list) --* **[REQUIRED]** 

          An HTTP method that you allow the origin to execute. Valid values are ``GET``, ``PUT``, ``HEAD``, ``POST``, and ``DELETE``.

          

        
          - *(string) --* 

          
      
        - **AllowedOrigins** *(list) --* **[REQUIRED]** 

          One or more origins you want customers to be able to access the bucket from.

          

        
          - *(string) --* 

          
      
        - **ExposeHeaders** *(list) --* 

          One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript ``XMLHttpRequest`` object).

          

        
          - *(string) --* 

          
      
        - **MaxAgeSeconds** *(integer) --* 

          The time in seconds that your browser is to cache the preflight response for the specified resource.

          

        
      
  
  
  :type ExpectedBucketOwner: string
  :param ExpectedBucketOwner: Ignored by COS if present.

  
  
  :returns: None