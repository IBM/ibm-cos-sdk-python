:doc:`S3 <../../s3>` / Resource / Bucket

======
Bucket
======



.. note::

  Before using anything on this page, please refer to the resources :doc:`user guide <../../../../guide/resources>` for the most recent guidance on using resources.



.. py:class:: S3.Bucket(name)

  A resource representing an Amazon Simple Storage Service (S3) Bucket::

    
    import ibm_boto3
    
    s3 = ibm_boto3.resource('s3')
    bucket = s3.Bucket('name')

  :type name: string
  :param name: The Bucket's name identifier. This **must** be set.
  




-----------
Identifiers
-----------



Identifiers are properties of a resource that are set upon instantiation of the resource.
For more information about identifiers refer to the :ref:`Resources Introduction Guide<identifiers_attributes_intro>`.

These are the resource's available identifiers:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  name



----------
Attributes
----------



Attributes provide access to the properties of a resource. Attributes are lazy-loaded the first time one is accessed via the :py:meth:`load` method.
For more information about attributes refer to the :ref:`Resources Introduction Guide<identifiers_attributes_intro>`.

These are the resource's available attributes:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  creation_date
  creation_template_id
  location_constraint



-------
Actions
-------



Actions call operations on resources.  They may automatically handle the passing in of arguments set from identifiers and some attributes.
For more information about actions refer to the :ref:`Resources Introduction Guide<actions_intro>`.

These are the resource's available actions:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  copy
  create
  delete
  delete_objects
  download_file
  download_fileobj
  get_available_subresources
  load
  put_object
  upload_file
  upload_fileobj



-------------
Sub-resources
-------------



Sub-resources are methods that create a new instance of a child resource. This resource's identifiers get passed along to the child.
For more information about sub-resources refer to the :ref:`Resources Introduction Guide<subresources_intro>`.

These are the resource's available sub-resources:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  Acl
  Cors
  LifecycleConfiguration
  Logging
  Notification
  Object
  Policy
  Protection
  Tagging
  Versioning
  Website



-----------
Collections
-----------



Collections provide an interface to iterate over and manipulate groups of resources. 
For more information about collections refer to the :ref:`Resources Introduction Guide<guide_collections>`.

These are the resource's available collections:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  multipart_uploads
  object_versions
  objects



-------
Waiters
-------



Waiters provide an interface to wait for a resource to reach a specific state.
For more information about waiters refer to the :ref:`Resources Introduction Guide<waiters_intro>`.

These are the resource's available waiters:

.. toctree::
  :maxdepth: 1
  :titlesonly:

  wait_until_exists
  wait_until_not_exists
